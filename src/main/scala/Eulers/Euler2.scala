package Eulers

/**
 * Created by kasonchan on 7/28/15.
 */
object Euler2 {

  // Each new term in the Fibonacci sequence is generated by adding the previous
  // two terms. By starting with 1 and 2, the first 10 terms will be:
  // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  // By considering the terms in the Fibonacci sequence whose values do not
  // exceed four million, find the sum of the even-valued terms.

  def main(args: Array[String]): Unit = {
    val result = fib(1, 2).takeWhile(x => x <= 4000000).filter(x => x % 2 == 0).sum
    println(result)
  }

  def fib(x: Int, y: Int): Stream[Int] = {
    // #:: Construct a stream consisting of a given first element followed by
    // elements from a lazily evaluated Stream.
    x #:: fib(y, x + y)
  }

}
